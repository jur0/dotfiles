[github]
	user = jur0

[user]
	name = Juraj Hlista
	email = jurajhlista@gmail.com

[color]
    diff = auto
    status = auto
	ui = auto

[core]
	editor = vim
	whitespace = trailing-space,space-before-tab

[alias]
    a = add
    aa = add -A :/
    ai = add -i
    ap = add -p
    au = add -u
    amend = commit --verbose --amend
    amendr = commit --verbose --amend --reset-author
    authors = "!git log --pretty=format:%aN | sort | uniq -c | sort -rn"
    bl = blame
    br = branch -vv
    bra = branch -a -vv
    brr = branch -a -vv -r
    c = commit --verbose
    ca = commit --verbose --all
    clear = reset --hard
    co = checkout
    cp = cherry-pick
    d = diff
    da = diff HEAD
    ds = diff --staged
    ignored = ls-files --exclude-standard --ignored --others
    l = log -25 --no-merges --pretty='format:%C(yellow)%h %C(green)%ai %C(bold blue)%an %C(red)%d%C(reset) %s'
    lf = log --no-merges --numstat --pretty='format:%C(yellow)%h %C(green)%ai %C(bold blue)%an %C(red)%d%C(reset) %s'
    lg = log --graph --pretty='format:%C(yellow)%h %C(green)%ai %C(bold blue)%an %C(red)%d%C(reset) %s'
    lga = log --graph --branches --remotes --tags --pretty='format:%C(yellow)%h %C(green)%ai %C(bold blue)%an %C(red)%d%C(reset) %s'
    ll = log --no-merges --pretty='format:%C(yellow)%h %C(green)%ai %C(bold blue)%an %C(red)%d%C(reset) %s'
    m = merge --no-ff
    p = push
    pb = "!git push --set-upstream origin `git rev-parse --abbrev-ref HEAD`"
    rb = rebase
    rba = rebase --abort
    rbc = rebase --continue
    rbi = rebase --interactive
    rbs = rebase --skip
    s = status
    sh = stash
    sha = stash apply
    shd = stash drop
    shl = stash list
    shp = stash pop
    shs = stash show -p
    tags = tag -l -n1
    this = "!git init && git add . && git commit -m 'Initial commit'"
    undo = reset --soft HEAD^
    wip = "!git add . && git commit -m 'WIP'"
    unwip = "!if [ `git show --oneline --pretty='%s' | head -n1` == 'WIP' ]; then git undo && git reset; fi"

[git-up "rebase"]
    arguments = --preserve-merges
    log-hook = "echo \"* changes on $1:\"; git log --no-merges --pretty='format:%C(yellow)%h %C(green)%ai %C(bold blue)%an %C(red)%d%C(reset) %s' $1..$2"

[branch]
	autosetupmerge = true
